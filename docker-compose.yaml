version: '3.9'
services:
  db:
    image: postgres:13.4
    volumes:
      - postgres:/var/lib/postgresql/data/
    env_file:
      - ./.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${DB_NAME}'"]
      interval: 10s
      timeout: 3s
      retries: 3

  migrations:
    build:
      context: ./
    command: sh -c "python manage.py migrate && python manage.py collectstatic --no-input"
    volumes:
      - static_value:/app/static/
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy

  backend:
    build:
      context: ./
    restart: always
    volumes:
      - static_value:/app/static/
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    env_file:
      - ./.env
    ports:
      - 8000:8000

volumes:
  static_value:
  postgres: